name: Mobile CI/CD

on:
  push:
    branches: [mobile-deploy]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: yarn install

    - name: Build environment file
      env:
        NODE_ENV: ${{ secrets.NODE_ENV }}
        IDENTITY_API_URL: ${{ secrets.IDENTITY_API_URL }}
        PORTAL_API_URL: ${{ secrets.PORTAL_API_URL }}
        GOOGLE_ID: ${{ secrets.GOOGLE_ID }}
        GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        PORTAL_PRE_API_URL: ${{ secrets.PORTAL_PRE_API_URL }}
        NEXT_BASE_URL: ${{ secrets.NEXT_BASE_URL }}
        LAZY_LOADING_IMAGE: ${{ secrets.LAZY_LOADING_IMAGE }}
        STORAGE_S1: ${{ secrets.STORAGE_S1 }}
        MOBILE_URL: ${{ secrets.MOBILE_URL }}
        ACTIVE_BANNER: ${{ secrets.MOBILE_URL }}
        MAINTENANCE_MODE: ${{ secrets.MAINTENANCE_MODE }}
        MAINTENANCE_ESTIMATE_COMPLETED: ${{ secrets.MAINTENANCE_ESTIMATE_COMPLETED }}
        SITEMAP_DISABLE_FETCH: ${{ secrets.SITEMAP_DISABLE_FETCH }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        GOOGLE_ADSENSE: ${{ secrets.GOOGLE_ADSENSE }}
        GOOGLE_ANALYTICS: ${{ secrets.GOOGLE_ANALYTICS }}
        # Add more environment variables here
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        FIREBASE_MESSAGING_SERVER_KEY: ${{ secrets.FIREBASE_MESSAGING_SERVER_KEY }}
        CLIENT_URL: ${{ secrets.CLIENT_URL }}
      run: |
        echo "# Enviroment" > .env 
        echo "NODE_ENV=$NODE_ENV" >> .env
        echo "IDENTITY_API_URL=$IDENTITY_API_URL" >> .env
        # Add more environment variables to .env file
        echo "PORTAL_API_URL=$PORTAL_API_URL" >> .env
        echo "GOOGLE_ID=$GOOGLE_ID" >> .env
        echo "GOOGLE_SECRET=$GOOGLE_SECRET" >> .env
        echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env
        echo "PORTAL_PRE_API_URL=$PORTAL_PRE_API_URL" >> .env
        echo "NEXT_BASE_URL=$NEXT_BASE_URL" >> .env
        echo "LAZY_LOADING_IMAGE=$LAZY_LOADING_IMAGE" >> .env
        echo "STORAGE_S1=$STORAGE_S1" >> .env
        echo "MOBILE_URL=$MOBILE_URL" >> .env
        echo "ACTIVE_BANNER=$ACTIVE_BANNER" >> .env
        echo "MAINTENANCE_MODE=$MAINTENANCE_MODE" >> .env
        echo "MAINTENANCE_ESTIMATE_COMPLETED=$MAINTENANCE_ESTIMATE_COMPLETED" >> .env
        echo "SITEMAP_DISABLE_FETCH=$SITEMAP_DISABLE_FETCH" >> .env
        echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env
        echo "GOOGLE_ADSENSE=$GOOGLE_ADSENSE" >> .env
        echo "GOOGLE_ANALYTICS=$GOOGLE_ANALYTICS" >> .env
        echo "# Mobile" >> .env
        echo "FIREBASE_API_KEY=$FIREBASE_API_KEY" >> .env
        echo "FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN" >> .env
        echo "FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> .env
        echo "FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET" >> .env
        echo "FIREBASE_APP_ID=$FIREBASE_APP_ID" >> .env
        echo "FIREBASE_MEASUREMENT_ID=$FIREBASE_MEASUREMENT_ID" >> .env
        echo "FIREBASE_MESSAGING_SERVER_KEY=$FIREBASE_MESSAGING_SERVER_KEY" >> .env
        echo "CLIENT_URL=$CLIENT_URL" >> .env

    - name: Build project
      run: yarn run build
    
    - name: Prepare build directory
      run: |
        mkdir build
        cp -r .next build/.temp
        cp .env build/temp.env
        ls -lah build
        ls -lah build/.temp

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: build

    - name: Deploy to DigitalOcean
      env:
        HOST_USER: ${{ secrets.HOST_USER }}
        HOST_IP: ${{ secrets.HOST_IP }}
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $HOST_IP >> ~/.ssh/known_hosts
        ls -lah # debug
        scp -r -o StrictHostKeyChecking=no ./temp.env $HOST_USER@$HOST_IP:client-comics
        echo "Processing to copy  .temp to Remote Server"
        scp -r -o StrictHostKeyChecking=no ./.temp $HOST_USER@$HOST_IP:client-comics
        echo "Done to copy .temp to Remote Server"
        ssh -o StrictHostKeyChecking=no $HOST_USER@$HOST_IP 'cd client-comics && ./nextjs-pm2.sh'
